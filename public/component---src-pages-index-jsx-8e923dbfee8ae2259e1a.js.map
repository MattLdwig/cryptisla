{"version":3,"sources":["webpack:///./src/components/Newsletter/Newsletter.jsx","webpack:///./src/components/PostListing/PostListingSub.jsx","webpack:///./src/pages/index.jsx","webpack:///./data/SiteConfig.js","webpack:///./src/components/UserLinks/UserLinks.jsx","webpack:///./src/layout/index.jsx","webpack:///./src/components/Footer/Footer.jsx","webpack:///./src/components/SEO/SEO.jsx","webpack:///./src/components/Header/Navigation.jsx","webpack:///./src/components/Header/Header.jsx","webpack:///./src/components/PostListing/PostListing.jsx"],"names":["Newsletter","render","react_default","a","createElement","className","id","action","method","type","name","value","placeholder","Component","PostListingSub","getPostList","postList","this","props","postEdges","forEach","postEdge","push","path","node","fields","slug","tags","frontmatter","cover","title","displayDate","date","excerpt","timeToRead","map","post","key","gatsby_browser_entry","to","src","components_Newsletter_Newsletter","React","Index","data","allMarkdownRemark","edges","layout","Helmet_default","config","siteTitle","SEO","Header","PostListing","PostListing_PostListingSub","Footer","pageQuery","siteTitleShort","siteTitleAlt","siteLogo","siteUrl","pathPrefix","siteDescription","siteRss","siteFBAppID","googleAnalyticsID","disqusShortname","postDefaultCategoryID","dateFromFormat","dateFormat","userName","userEmail","userTwitter","userLocation","userAvatar","userDescription","userLinks","label","url","iconClassName","icon","menuLink","link","copyright","themeColor","backgroundColor","replace","substr","slice","module","exports","UserLinks","getLinkElements","labeled","react__WEBPACK_IMPORTED_MODULE_1___default","href","MainLayout","children","react_helmet__WEBPACK_IMPORTED_MODULE_2___default","content","_UserLinks_UserLinks__WEBPACK_IMPORTED_MODULE_3__","description","image","postURL","_this$props","postNode","postPath","postSEO","postMeta","urljoin","blogURL","schemaOrgJSONLD","@context","@type","alternateName","itemListElement","position","item","@id","headline","JSON","stringify","dangerouslySetInnerHTML","__html","property","Navigation","_this","_Component","call","state","isOpen","isMobile","open","setState","toggleNav","bind","assertThisInitialized_default","logo","isOpenAnim","onClick","react_responsive_default","maxWidth","dist_default","onClose","labelledby","height","returnFocusAfterClose","Header_Navigation","navToggle","minWidth","react__WEBPACK_IMPORTED_MODULE_2___default","style","background","backgroundPosition","backgroundSize","gatsby__WEBPACK_IMPORTED_MODULE_3__"],"mappings":"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","file":"component---src-pages-index-jsx-8e923dbfee8ae2259e1a.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport { Link } from \"gatsby\";\r\nimport \"./Newsletter.css\";\r\n\r\nclass Newsletter extends Component {\r\n  render() {\r\n    return (\r\n        <div className=\"newsletter-container\" id=\"newsletter\">\r\n          <div className=\"newsletter__info\">\r\n            <h2 className=\"newsletter__title\">Restons en contact</h2>\r\n            <p className=\"newsletter__sub\">Recevez les derniers articles directement dans votre boite mail.</p>\r\n            <form action=\"https://cryptisla.us19.list-manage.com/subscribe/post\" method=\"POST\">\r\n              <input type=\"hidden\" name=\"u\" value=\"b2c2786749f2250b6db9f1d37\" />\r\n              <input type=\"hidden\" name=\"id\" value=\"066bb7f36a\" />              \r\n              <input type=\"email\" className=\"form-control\" placeholder=\"Votre Email\" name=\"MERGE0\"></input>\r\n              <button className=\"btn\" type=\"submit\" name=\"submit\">Je m'inscris</button>\r\n              <input type=\"hidden\" name=\"ht\" value=\"c8cd266242e4d3db86980f06500d4a3ed702a18d:MTU1NDgwMzMwMS44NzQy\" />\r\n              <input type=\"hidden\" name=\"mc_signupsource\" value=\"hosted\" />\r\n            </form>\r\n          </div>\r\n          <div className=\"newsletter__illustration\"></div>\r\n        </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Newsletter;\r\n","import React from \"react\";\r\nimport { Link } from \"gatsby\";\r\nimport Newsletter from '../Newsletter/Newsletter';\r\nimport './PostListing.css';\r\n\r\nclass PostListingSub extends React.Component {\r\n  getPostList() {\r\n    const postList = [];\r\n    this.props.postEdges.forEach(postEdge => {\r\n      postList.push({\r\n        path: postEdge.node.fields.slug,\r\n        tags: postEdge.node.frontmatter.tags,\r\n        cover: postEdge.node.frontmatter.cover,\r\n        title: postEdge.node.frontmatter.title,\r\n        displayDate: postEdge.node.frontmatter.date,\r\n        date: postEdge.node.fields.date,\r\n        excerpt: postEdge.node.excerpt,\r\n        timeToRead: postEdge.node.timeToRead\r\n      });\r\n    });\r\n    return postList;\r\n  }\r\n  render() {\r\n    const postList = this.getPostList();\r\n    return (\r\n      <section className=\"post-listing__sub\">\r\n        <h2 className=\"post-listing__sub_title\">DERNIERS ARTICLES</h2>\r\n        <div className=\"post-listing__container_sub\">\r\n            {/* Your post list here. */\r\n            postList.map(post => {\r\n            if (post === postList[1] || post === postList[2] || post === postList[3]) {\r\n            return (\r\n                <div className=\"post-card\" key={post.title}> \r\n                    <Link to={post.path} key={`${post.title}_sub`}>\r\n                        <img src={post.cover} className={'post-cover'} />\r\n                        <h2 className=\"post-card__title\">{post.title}</h2>\r\n                        <p className=\"post-card__date-sub\">{post.displayDate}</p>\r\n                    </Link>\r\n                </div>\r\n                )   \r\n          }\r\n        })}\r\n        </div>\r\n        <Newsletter />\r\n        <div className=\"post-listing__container_sub\">\r\n            {/* Your post list here. */\r\n            postList.map(post => {\r\n            if (post !== postList[0] && post !== postList[1] && post !== postList[2] && post !== postList[3]) {\r\n            return (\r\n                <div className=\"post-card\" key={post.title}> \r\n                    <Link to={post.path} key={`${post.title}_sub`}>\r\n                        <img src={post.cover} className={'post-cover'} />\r\n                        <h2 className=\"post-card__title\">{post.title}</h2>\r\n                        <p className=\"post-card__date-sub\">{post.displayDate}</p>\r\n                    </Link>\r\n                </div>\r\n                )   \r\n          }\r\n        })}\r\n        </div>\r\n      </section>\r\n    );\r\n  }\r\n}\r\n\r\nexport default PostListingSub;\r\n","import React from \"react\";\r\nimport Helmet from \"react-helmet\";\r\nimport { graphql } from \"gatsby\";\r\nimport Layout from \"../layout\";\r\nimport PostListing from \"../components/PostListing/PostListing\";\r\nimport PostListingSub from '../components/PostListing/PostListingSub';\r\nimport Newsletter from '../components/Newsletter/Newsletter';\r\nimport SEO from \"../components/SEO/SEO\";\r\nimport Header from '../components/Header/Header';\r\nimport Footer from '../components/Footer/Footer';\r\nimport config from \"../../data/SiteConfig\";\r\n\r\nclass Index extends React.Component {\r\n  render() {\r\n    const postEdges = this.props.data.allMarkdownRemark.edges;\r\n    return (\r\n        <Layout>\r\n          <div className=\"index-container\">\r\n            <Helmet title={config.siteTitle} />\r\n            <SEO />\r\n            <Header config={config}/>\r\n            <PostListing postEdges={postEdges} />\r\n            <PostListingSub postEdges={postEdges} />\r\n            <Footer config={config}/>\r\n          </div>\r\n        </Layout>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Index;\r\n\r\n/* eslint no-undef: \"off\" */\r\nexport const pageQuery = graphql`\r\n  query IndexQuery {\r\n    allMarkdownRemark(\r\n      limit: 2000\r\n      sort: { fields: [fields___date], order: DESC }\r\n    ) {\r\n      edges {\r\n        node {\r\n          fields {\r\n            slug\r\n            date\r\n          }\r\n          excerpt\r\n          timeToRead\r\n          frontmatter {\r\n            title\r\n            tags\r\n            cover\r\n            date\r\n            description\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n`;\r\n","const config = {\r\n  siteTitle: \"Cryptisla\", // Site title.\r\n  siteTitleShort: \"Cryptisla\", // Short site title for homescreen (PWA). Preferably should be under 12 characters to prevent truncation.\r\n  siteTitleAlt: \"Cryptisla, le trading de cryptos pour débutants\", // Alternative site title for SEO.\r\n  siteLogo: \"/logos/logo.png\", // Logo used for SEO and manifest.\r\n  siteUrl: \"https://cryptisla.com\", // Domain of your website without pathPrefix.\r\n  pathPrefix: \"\", // Prefixes all links. For cases when deployed to example.github.io/gatsby-advanced-starter/.\r\n  siteDescription: \"Découvrir le trading de crypto-monnaies et la blockchain simplement.\", // Website description used for RSS feeds/meta description tag.\r\n  siteRss: \"/rss.xml\", // Path to the RSS file.\r\n  siteFBAppID: \"\", // FB Application ID for using app insights\r\n  googleAnalyticsID: \"UA-59515367-8\", // GA tracking ID.\r\n  disqusShortname: \"cryptisla\", // Disqus shortname.\r\n  postDefaultCategoryID: \"trading\", // Default category for posts.\r\n  dateFromFormat: \"YYYY-MM-DD\", // Date format used in the frontmatter.\r\n  dateFormat: \"DD/MM/YYYY\", // Date format for display.\r\n  userName: \"Cala\", // Username to display in the author segment.\r\n  userEmail: \"hello@cryptisla.com\", // Email used for RSS feed's author segment\r\n  userTwitter: \"\", // Optionally renders \"Follow Me\" in the UserInfo segment.\r\n  userLocation: \"\", // User location to display in the author segment.\r\n  userAvatar: \"https://api.adorable.io/avatars/150/test.png\", // User avatar to display in the author segment.\r\n  userDescription:\r\n    \"Yeah, I like animals better than people sometimes... Especially dogs. Dogs are the best. Every time you come home, they act like they haven't seen you in a year. And the good thing about dogs... is they got different dogs for different people.\", // User description to display in the author segment.\r\n  // Links to social profiles/projects you want to display in the author segment/navigation bar.\r\n  userLinks: [\r\n    {\r\n      label: \"Insta\",\r\n      url: \"https://instagram.com/cryptisla\",\r\n      iconClassName: \"fa fa-instagram\",\r\n      icon: \"/icons/instagram.svg\"\r\n    },\r\n    {\r\n      label: \"Twitter\",\r\n      url: \"https://twitter.com/cryptisla\",\r\n      iconClassName: \"fa fa-twitter\",\r\n      icon: \"/icons/twitter.svg\"\r\n    },\r\n    {\r\n      label: \"Facebook\",\r\n      url: \"https://facebook.com/cryptisla\",\r\n      iconClassName: \"fa fa-envelope\",\r\n      icon: \"/icons/facebook.svg\"\r\n    },\r\n    {\r\n      label: \"Medium\",\r\n      url: \"https://medium.com/cryptisla\",\r\n      iconClassName: \"fa fa-envelope\",\r\n      icon: \"/icons/medium.svg\"\r\n    }\r\n  ],\r\n  menuLink: [\r\n    {\r\n      name: 'home',\r\n      link: '/'\r\n    },\r\n    {\r\n      name: 'guides',\r\n      link: '/guides'\r\n    },\r\n    {\r\n      name: 'trading',\r\n      link: '/trading'\r\n    },\r\n    {\r\n      name: 'blockchain',\r\n      link: '/blockchain'\r\n    },\r\n    {\r\n      name: 'newsletter',\r\n      link: '#newsletter'\r\n    }\r\n  ],\r\n  copyright: \"Copyright © 2019. Cryptisla\", // Copyright string for the footer of the website and RSS feed.\r\n  themeColor: \"#c62828\", // Used for setting manifest and progress theme colors.\r\n  backgroundColor: \"#e0e0e0\" // Used for setting manifest background color.\r\n};\r\n\r\n// Validate\r\n\r\n// Make sure pathPrefix is empty if not needed\r\nif (config.pathPrefix === \"/\") {\r\n  config.pathPrefix = \"\";\r\n} else {\r\n  // Make sure pathPrefix only contains the first forward slash\r\n  config.pathPrefix = `/${config.pathPrefix.replace(/^\\/|\\/$/g, \"\")}`;\r\n}\r\n\r\n// Make sure siteUrl doesn't have an ending forward slash\r\nif (config.siteUrl.substr(-1) === \"/\")\r\n  config.siteUrl = config.siteUrl.slice(0, -1);\r\n\r\n// Make sure siteRss has a starting forward slash\r\nif (config.siteRss && config.siteRss[0] !== \"/\")\r\n  config.siteRss = `/${config.siteRss}`;\r\n\r\nmodule.exports = config;\r\n","import React, { Component } from \"react\";\r\nimport { Link } from \"gatsby\";\r\nimport \"./UserLinks.css\";\r\n\r\n\r\nclass UserLinks extends Component {\r\n  getLinkElements() {\r\n    const { userLinks } = this.props.config;\r\n    const { labeled } = this.props;\r\n    return userLinks.map(link => (\r\n      <a className=\"user-links\" key={link.label} href={link.url}>\r\n        <img src={link.icon} className=\"user-links__social\"/>\r\n      </a>\r\n    ));\r\n  }\r\n  render() {\r\n    const { userLinks } = this.props.config;\r\n    if (!userLinks) {\r\n      return null;\r\n    }\r\n    return <div className=\"user-links\">{this.getLinkElements()}</div>;\r\n  }\r\n}\r\n\r\nexport default UserLinks;\r\n","import React from \"react\";\r\nimport Helmet from \"react-helmet\";\r\nimport config from \"../../data/SiteConfig\";\r\nimport \"./index.css\";\r\n\r\nexport default class MainLayout extends React.Component {\r\n  render() {\r\n    const { children } = this.props;\r\n    return (\r\n      <div className=\"container\">\r\n        <Helmet>\r\n          <meta name=\"description\" content={config.siteDescription} />\r\n        </Helmet>\r\n        {children}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport { Link } from \"gatsby\";\r\nimport UserLinks from \"../UserLinks/UserLinks\";\r\nimport \"./Footer.css\";\r\n\r\nclass Footer extends Component {\r\n  render() {\r\n    const { config } = this.props;\r\n    const url = config.siteRss;\r\n    const { copyright } = config;\r\n    if (!copyright) {\r\n      return null;\r\n    }\r\n    return (\r\n      <footer className=\"footer\">\r\n        <div className=\"notice-container\">\r\n          <span>Made with ❤️️ in 🇪🇺 {copyright}</span>\r\n        </div>\r\n        <UserLinks config={config} labeled />\r\n      </footer>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Footer;\r\n","import React, { Component } from \"react\";\r\nimport Helmet from \"react-helmet\";\r\nimport urljoin from \"url-join\";\r\nimport config from \"../../../data/SiteConfig\";\r\n\r\nclass SEO extends Component {\r\n  render() {\r\n    const { postNode, postPath, postSEO } = this.props;\r\n    let title;\r\n    let description;\r\n    let image;\r\n    let postURL;\r\n    if (postSEO) {\r\n      const postMeta = postNode.frontmatter;\r\n      ({ title } = postMeta);\r\n      description = postMeta.description\r\n        ? postMeta.description\r\n        : postNode.excerpt;\r\n      image = postMeta.cover;\r\n      postURL = urljoin(config.siteUrl, config.pathPrefix, postPath);\r\n    } else {\r\n      title = config.siteTitle;\r\n      description = config.siteDescription;\r\n      image = config.siteLogo;\r\n    }\r\n\r\n    image = urljoin(config.siteUrl, config.pathPrefix, image);\r\n    const blogURL = urljoin(config.siteUrl, config.pathPrefix);\r\n    const schemaOrgJSONLD = [\r\n      {\r\n        \"@context\": \"http://schema.org\",\r\n        \"@type\": \"WebSite\",\r\n        url: blogURL,\r\n        name: title,\r\n        alternateName: config.siteTitleAlt ? config.siteTitleAlt : \"\"\r\n      }\r\n    ];\r\n    if (postSEO) {\r\n      schemaOrgJSONLD.push(\r\n        {\r\n          \"@context\": \"http://schema.org\",\r\n          \"@type\": \"BreadcrumbList\",\r\n          itemListElement: [\r\n            {\r\n              \"@type\": \"ListItem\",\r\n              position: 1,\r\n              item: {\r\n                \"@id\": postURL,\r\n                name: title,\r\n                image\r\n              }\r\n            }\r\n          ]\r\n        },\r\n        {\r\n          \"@context\": \"http://schema.org\",\r\n          \"@type\": \"BlogPosting\",\r\n          url: blogURL,\r\n          name: title,\r\n          alternateName: config.siteTitleAlt ? config.siteTitleAlt : \"\",\r\n          headline: title,\r\n          image: {\r\n            \"@type\": \"ImageObject\",\r\n            url: image\r\n          },\r\n          description\r\n        }\r\n      );\r\n    }\r\n    return (\r\n      <Helmet>\r\n        {/* General tags */}\r\n        <meta name=\"description\" content={description} />\r\n        <meta name=\"image\" content={image} />\r\n\r\n        {/* Schema.org tags */}\r\n        <script type=\"application/ld+json\">\r\n          {JSON.stringify(schemaOrgJSONLD)}\r\n        </script>\r\n        <script dangerouslySetInnerHTML={{ __html: `!function(c,h,i,m,p){m=c.createElement(h),p=c.getElementsByTagName(h)[0],m.async=1,m.src=i,p.parentNode.insertBefore(m,p)}(document,\"script\",\"https://chimpstatic.com/mcjs-connected/js/users/b2c2786749f2250b6db9f1d37/c01b9b6078e74872e5e2ec638.js\");`}}></script>\r\n        {/* OpenGraph tags */}\r\n        <meta property=\"og:url\" content={postSEO ? postURL : blogURL} />\r\n        {postSEO ? <meta property=\"og:type\" content=\"article\" /> : null}\r\n        <meta property=\"og:title\" content={title} />\r\n        <meta property=\"og:description\" content={description} />\r\n        <meta property=\"og:image\" content={image} />\r\n        <meta\r\n          property=\"fb:app_id\"\r\n          content={config.siteFBAppID ? config.siteFBAppID : \"\"}\r\n        />\r\n\r\n        {/* Twitter Card tags */}\r\n        <meta name=\"twitter:card\" content=\"summary_large_image\" />\r\n        <meta\r\n          name=\"twitter:creator\"\r\n          content={config.userTwitter ? config.userTwitter : \"\"}\r\n        />\r\n        <meta name=\"twitter:title\" content={title} />\r\n        <meta name=\"twitter:description\" content={description} />\r\n        <meta name=\"twitter:image\" content={image} />\r\n      </Helmet>\r\n    );\r\n  }\r\n}\r\n\r\nexport default SEO;\r\n","import React, { Component } from \"react\";\r\nimport { Link } from \"gatsby\";\r\nimport UserLinks from \"../UserLinks/UserLinks\";\r\nimport OffCanvas from 'react-aria-offcanvas';\r\nimport \"./Header.css\";\r\n\r\nclass Navigation extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      isOpen: false\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { config } = this.props;\r\n    const url = config.menuLink;\r\n    const isMobile = config.isMobile ? 'item visible' : 'item hidden';\r\n\r\n    return (\r\n        <nav id=\"menu\">\r\n        <ul className=\"primary-nav__items\">\r\n            <li className=\"item\"><Link to={url[1].link}>👨‍🎓 GUIDES</Link></li>\r\n            <li className=\"item\"><Link to={url[2].link}>📈 TRADING</Link></li>\r\n            <li className=\"item\"><Link to={url[3].link}>🤝 BLOCKCHAIN</Link></li>\r\n            <li className=\"item no-margin\"><Link to={url[4].link}>💌 NEWSLETTER</Link></li>\r\n        </ul>\r\n        </nav>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Navigation;\r\n","import React, { Component } from \"react\";\r\nimport { Link } from \"gatsby\";\r\nimport Navigation from './Navigation';\r\nimport MediaQuery from 'react-responsive';\r\nimport OffCanvas from 'react-aria-offcanvas';\r\nimport UserLinks from \"../UserLinks/UserLinks\";\r\nimport \"./Header.css\";\r\n\r\nclass Header extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      isOpen: false\r\n    }\r\n\r\n    this.toggleNav = this.toggleNav.bind(this);\r\n  }\r\n\r\n  toggleNav() {\r\n    this.setState({\r\n      isOpen: !this.state.isOpen\r\n    })\r\n  }\r\n\r\n  open = () => {\r\n    this.setState({ isOpen: !this.state.isOpen })\r\n  }\r\n\r\n\r\n  render() {\r\n    const { config } = this.props;\r\n    const url = config.menuLink;\r\n    const { copyright } = config;\r\n    const logo = config.siteLogo;\r\n    if (!copyright) {\r\n      return null;\r\n    }\r\n    const isOpen = this.state.isOpen ? 'primary-nav visible' : 'primary-nav hidden';\r\n    const isOpenAnim = this.state.isOpen ? 'nav-toggle__bar half half_left' : 'nav-toggle__bar half';\r\n    return (\r\n      <header className=\"header\">\r\n        <div className=\"header--container\">\r\n        <div className=\"header__mobile\">\r\n          <Link to={url[0].link}><img className=\"logo\" src={logo} /></Link>\r\n          <div className=\"nav-toggle\" onClick={this.toggleNav}>\r\n            <div className=\"nav-toggle__bar\"></div>\r\n            <div className={isOpenAnim}></div>\r\n            <div className=\"nav-toggle__bar\"></div>\r\n          </div>\r\n          </div>\r\n          <MediaQuery maxWidth={1100}>\r\n            <OffCanvas\r\n              isOpen={this.state.isOpen}\r\n              onClose={this.open}\r\n              labelledby=\"nav-toggle\"\r\n              height={\"100vh\"}\r\n              className={'nav__offCanvas'}\r\n              returnFocusAfterClose={false}\r\n              >\r\n                <Navigation config={config} isMobile={true} navToggle={this.open} />\r\n                <div onClick={this.open} className=\"close\"></div>\r\n              </OffCanvas>\r\n          </MediaQuery>\r\n          <MediaQuery minWidth={1101}>\r\n            <Navigation config={config} isMobile={false} navToggle={this.open}/>\r\n          </MediaQuery>\r\n        </div>\r\n      </header>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Header;\r\n","import React from \"react\";\r\nimport { Link } from \"gatsby\";\r\nimport './PostListing.css';\r\n\r\nclass PostListing extends React.Component {\r\n  getPostList() {\r\n    const postList = [];\r\n    this.props.postEdges.forEach(postEdge => {\r\n      postList.push({\r\n        path: postEdge.node.fields.slug,\r\n        tags: postEdge.node.frontmatter.tags,\r\n        cover: postEdge.node.frontmatter.cover,\r\n        title: postEdge.node.frontmatter.title,\r\n        displayDate: postEdge.node.frontmatter.date,\r\n        date: postEdge.node.fields.date,\r\n        excerpt: postEdge.node.excerpt,\r\n        timeToRead: postEdge.node.timeToRead\r\n      });\r\n    });\r\n    return postList;\r\n  }\r\n  render() {\r\n    const postList = this.getPostList();\r\n    return (\r\n      <div className=\"post-listing__container\">\r\n        {/* Your post list here. */\r\n        postList.map(post => {\r\n          const style = {background: 'url(' + post.cover + ')', backgroundPosition: 'top', backgroundSize: 'cover'}\r\n          if (post === postList[0]) {\r\n            return (\r\n              <div className=\"post-card__hero\" style={style} key={post.title}>\r\n                <Link to={post.path} key={`${post.title}_post`} className=\"post-card__link\">\r\n                <p className=\"post-card__complementary\">\r\n                  <span className=\"post-card__tag\">{post.tags}</span>\r\n                  <span className=\"post-card__date\">{post.displayDate}</span>\r\n                </p> \r\n                <div className=\"post-card__info\">\r\n                  <h1 className=\"post-card__hero-title\">{post.title}</h1>\r\n                </div>\r\n                <div className=\"post-card__more\">\r\n                  <span>LIRE L'ARTICLE</span>\r\n                </div>\r\n              </Link>\r\n          </div>\r\n            )   \r\n          }\r\n        })}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default PostListing;\r\n"],"sourceRoot":""}